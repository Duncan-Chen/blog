<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duncan.blog.dao.UserVoMapper">
    <resultMap type="com.duncan.blog.model.vo.UserVo" id="baseResultMap">
        <id column="uid" javaType="INTEGER" property="uid" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="home_url" jdbcType="VARCHAR" property="homeUrl" />
        <result column="screen_name" jdbcType="VARCHAR" property="screenName" />
        <result column="created" jdbcType="INTEGER" property="created" />
        <result column="actived" jdbcType="INTEGER" property="actived" />
        <result column="logged" jdbcType="INTEGER" property="logged" />
        <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefixOverrides="and">
                        <foreach collection="criteria.criterions" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" separator="," 
                                        open="(" close=")">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    
    <sql id="Base_Column_List">
       uid, username, password, email, home_url, screen_name, created, activated, logged, group_name
    </sql>
    
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="baseResultMap">
        select 
        <include refid="Base_Column_List"></include>
        from t_users
        where uid = #{uid, jdbcType=INTEGER}
    </select>
    <select id="countByExample" parameterType="com.duncan.blog.model.vo.UserVoExample" resultType="java.lang.Long">
        select count(*) from t_users
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"></include>
        </if>
    </select>
    <select id="selectByExample" parameterType="com.duncan.blog.model.vo.UserVoExample" resultMap="baseResultMap">
        select 
        <if test="distinct">
            distinct 
        </if>
        <include refid="Base_Column_List"></include>
        from t_users 
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"></include>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause} 
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="limit == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <update id="updateByPrimaryKeySelective" parameterType="com.duncan.blog.model.vo.UserVo">
        update t_users 
        <set>
            <if test="username != null">
                username = #{username, jdbcType=VARCHAR}, 
            </if>
            <if test="password != null">
                password = #{password, jdbcType=VARCHAR}, 
            </if>
            <if test="email != null">
                email = #{email, jdbcType=VARCHAR}, 
            </if>
            <if test="homeUrl != null">
                home_url = #{homeUrl, jdbcType=VARCHAR}, 
            </if>
            <if test="screenName != null">
                screen_name = #{screenName, jdbcType=VARCHAR}, 
            </if>
            <if test="created != null">
                created = #{created, jdbcType=INTEGER}, 
            </if>
            <if test="activated != null">
                activated = #{activated, jdbcType=INTEGER}, 
            </if>
            <if test="logged != null">
                logged = #{logged, jdbcType=INTEGER}, 
            </if>
            <if test="groupName != null">
                group_name = #{groupName, jdbcType=VARCHAR},
            </if>
        </set>
        where uid = #{uid, jdbcType=INTEGER}
    </update>
</mapper>